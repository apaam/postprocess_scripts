function vtk_data = myvtk_read_binary(file_name)
% only verified for the atom and force vtk files outputed by LIGGGHTS

%% open file
fid = fopen(file_name);

%% vtk infomation

% # vtk DataFile Version 4.0
tline = fgetl_nonempty(fid);
if ~contains(tline,'# vtk DataFile Version','IgnoreCase',1)
  fclose(fid);
  error('First line should be "# vtk DataFile Version"');
end
tmp = split(tline);
vtk_data.version = tmp{end};

% Generated by LIGGGHTS
tline = fgetl_nonempty(fid);
if ~contains(tline,'Generated by','IgnoreCase',1)
  fclose(fid);
  error('Second line should be "Generated by"');
end
tmp = split(tline);
vtk_data.generator = tmp{end};

% ASCII
tline = fgetl_nonempty(fid);
if ~contains(tline,'BINARY','IgnoreCase',1)
  fclose(fid);
  error('Thrid line should be "BINARY" or other format');
end
tmp = split(tline);
vtk_data.format = tmp{end};

% DATASET POLYDATA
tline = fgetl_nonempty(fid);
if ~contains(tline,'DATASET','IgnoreCase',1)
  fclose(fid);
  error('Forth line should be "DATASET" or other format');
end
tmp = split(tline);
vtk_data.dataset = tmp{end};

%% point coordinates
tline = fgetl_nonempty(fid);
tmp = split(tline);
num_elem = str2double(tmp{2});
num_vals = 3;
data_type = tmp{end};

vtk_data.points = fread(fid,[num_vals,num_elem],data_type,'s')';

%% vertices (connectivities)
tline = fgetl_nonempty(fid);
tmp = split(tline);
num_elem = str2double(tmp{2});
num_vals = str2double(tmp{3})/str2double(tmp{2});
vtk_data.geometry = tmp{1};
data_type = 'int';

vtk_data.connectivities = fread(fid,[num_vals,num_elem],data_type,'s')';

%% other attributes
fgetl_nonempty(fid);  % skip cell_data or point_data header

tline = fgetl_nonempty(fid);
tmp = split(tline);
vtk_data.num_attr = str2double(tmp{end});

for i_attr=1:vtk_data.num_attr
  tline = fgetl_nonempty(fid);
  tmp = split(tline);
  name_attr = tmp{1};
  name_attr = regexprep(name_attr,'[[]-]','');
  num_vals = str2double(tmp{2});
  num_elem = str2double(tmp{3});
  data_type = tmp{end};
  
  vtk_data.(name_attr) = fread(fid,[num_vals,num_elem],data_type,'s')';
end

%% close file
fclose(fid);

end
